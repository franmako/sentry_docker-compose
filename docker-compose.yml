version: "3.1"

services:
    sentry:
        image: sentry
        container_name: sentry_sentry
        env_file: .env
        expose:
            - "9000"
        networks: 
            - databases
        environment:
            - SENTRY_SECRET_KEY= ${SECRET_KEY}
            - SENTRY_POSTGRES_HOST= ${DB_HOST}
            - SENTRY_DB_USER= ${DB_USER}
            - SENTRY_DB_PASSWORD= ${DB_PASSWORD}
            - SENTRY_REDIS_HOST= ${REDIS_HOST}
        restart: unless-stopped

    web:
        build: .
        container_name: sentry_web
        volumes:
            - nginx_logs:/var/log/nginx
        networks:
            - databases
            - reverse-proxy
        environment:
            - VIRTUAL_HOST=sentry.franmako.me 
        expose:
            - "80"     
        restart: unless-stopped

    cron:
        image: sentry
        container_name: sentry_cron
        env_file: .env   
        networks: 
            - databases   
        environment:
            - SENTRY_SECRET_KEY= ${SECRET_KEY}
        restart: unless-stopped
        command: "sentry run cron"

    worker:   
        image: sentry
        container_name: sentry_worker
        env_file: .env
        networks: 
            - databases
        environment:
            - SENTRY_SECRET_KEY= ${SECRET_KEY}
        restart: unless-stopped
        command: "sentry run worker"

    smtp:
        image: tianon/exim4
        container_name: sentry_smtp
        env_file: .env
        networks: 
            - databases
        environment:
            - GMAIL_USER= ${SMTP_USER}
            - GMAIL_PASSWORD= ${SMTP_PASSWORD}

volumes:
    nginx_logs:

networks:
    databases:
        external:
            name: franmakodatabases_default

    reverse-proxy:
        external:
            name: franmakoreverseproxy_reverse-proxy
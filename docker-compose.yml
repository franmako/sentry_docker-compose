version: "3.1"

services:
    postgres:
        container_name: sentry_postgres
        image: postgres
        env_file: 
            - .env
        volumes:
            - postgres-data:/var/lib/postgresql/data
        expose:
            - "5432"
        environment:
            - DB_PASSWORD=${DB_PASSWORD}
        restart: always

    redis:
        container_name: sentry_redis
        image: redis
        expose:
            - "6379"
        restart: always

    sentry:
        image: sentry
        container_name: sentry_sentry
        env_file: .env
        expose:
            - "9000"
        environment:
            - SENTRY_SECRET_KEY=${SECRET_KEY}
            - SENTRY_POSTGRES_HOST=${DB_HOST}
            - SENTRY_DB_USER=${DB_USER}
            - SENTRY_DB_PASSWORD=${DB_PASSWORD}
            - SENTRY_REDIS_HOST=${REDIS_HOST}
        restart: unless-stopped

    web:
        build: .
        container_name: sentry_web
        volumes:
            - nginx_logs:/var/log/nginx
        networks:
            - default
            - reverse-proxy
        environment:
            - VIRTUAL_HOST=sentry.franmako.me 
        expose:
            - "80"     
        restart: unless-stopped

    cron:
        image: sentry
        container_name: sentry_cron
        env_file: .env      
        environment:
            - SENTRY_SECRET_KEY=${SECRET_KEY}
        restart: unless-stopped
        command: "sentry run cron"

    worker:   
        image: sentry
        container_name: sentry_worker
        env_file: .env
        environment:
            - SENTRY_SECRET_KEY=${SECRET_KEY}
        restart: unless-stopped
        command: "sentry run worker"

    smtp:
        image: tianon/exim4
        container_name: sentry_smtp
        env_file: .env
        environment:
            - GMAIL_USER=${SMTP_USER}
            - GMAIL_PASSWORD=${SMTP_PASSWORD}

volumes:
    nginx_logs:
    postgres-data:

networks:
    reverse-proxy:
        external:
            name: franmakoreverseproxy_reverse-proxy